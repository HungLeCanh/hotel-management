/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package QuanLyKhachSan_GUI;

import QuanLyKhachSan_SERVER.PhongThue;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import QuanLyKhachSan_SERVER.IHotelManager;
import java.awt.HeadlessException;

/**
 *
 * @author LE CANH HUNG
 */
public class Client_GUI extends javax.swing.JFrame {

    /**
     * Creates new form Client_GUI
     */
    public Client_GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDanhSach = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbbSoPhong = new javax.swing.JComboBox<>();
        tfKhachHang = new javax.swing.JTextField();
        tfCMND = new javax.swing.JTextField();
        tfCheckIn = new javax.swing.JTextField();
        tfCheckOut = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnCheckOut = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnShowAllRoom = new javax.swing.JButton();
        btnShowEmptyRoom = new javax.swing.JButton();
        cbbSoPhongForCheckOut = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        tfTimKiem = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnShowHistory = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cbbYear = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        cbbMonth = new javax.swing.JComboBox<>();
        btnThongKe = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("KHÁCH SẠN LÊ CẢNH HÙNG");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tableDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số phòng", "Trạng thái", "Khách hàng", "CMND", "Check in", "Check out"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableDanhSach);

        jLabel2.setText("Số phòng:");

        jLabel3.setText("Khách hàng:");

        jLabel4.setText("CMND:");

        jLabel5.setText("Check in:");

        jLabel6.setText("Check out:");

        tfCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCheckInActionPerformed(evt);
            }
        });

        tfCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCheckOutActionPerformed(evt);
            }
        });

        btnUpdate.setText("CẬP NHẬT");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnCheckOut.setText("CHECK OUT");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("*YYYY-MM-DD");

        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("*YYYY-MM-DD");

        btnShowAllRoom.setText("Hiện toàn bộ phòng");
        btnShowAllRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllRoomActionPerformed(evt);
            }
        });

        btnShowEmptyRoom.setText("Hiện phòng trống");
        btnShowEmptyRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowEmptyRoomActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 255));
        jLabel9.setText("Chọn số phòng để check out:");

        jButton1.setText("TÌM KIẾM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnShowHistory.setText("Lịch sử thuê phòng");
        btnShowHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowHistoryActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 255));
        jLabel10.setText("Thống kê doanh thu:");

        jLabel11.setText("Năm:");

        cbbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034" }));
        cbbYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbYearActionPerformed(evt);
            }
        });

        jLabel12.setText("Tháng");

        cbbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        btnThongKe.setText("Thống kê");
        btnThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel13.setText("Bảo trì và cập nhật: 0935718178(Hùng)");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 255));
        jLabel14.setText("CHECK IN");

        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel15.setText("Nhập số phòng cần tìm:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfCheckIn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(tfCMND, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbbSoPhong, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfKhachHang, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfCheckOut)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel14)
                                .addGap(95, 95, 95))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUpdate))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton1)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(cbbSoPhongForCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnCheckOut))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnThongKe)
                                            .addComponent(jLabel10)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(cbbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(cbbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(342, 342, 342)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnShowAllRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnShowEmptyRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnShowHistory))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel1)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 20, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(cbbSoPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tfKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(tfCMND, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(tfCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(tfCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbbSoPhongForCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCheckOut))
                                .addGap(24, 24, 24)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(cbbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(cbbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnThongKe))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnShowEmptyRoom)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnShowAllRoom))
                            .addComponent(btnShowHistory)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1)))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
            if (!checkfill()) {
                JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập đầy đủ thông tin");
            } else if (!checkFolmatHoVaTen(tfKhachHang.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Bạn đã nhập sai định dạng tên");
            } else if (!checkFolmatCMND(tfCMND.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Bạn đã nhập sai định dạng CMND");
            } else if (!checkFolmatTime(tfCheckIn.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Bạn đã nhập sai định dạng thời gian");
            } else if (!checkFolmatTime(tfCheckOut.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Bạn đã nhập sai định dạng thời gian");
            } else {
                // Xử lý thời gian
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd"); // Định dạng phù hợp
                LocalDate checkIn = LocalDate.parse(tfCheckIn.getText(), formatter);
                LocalDate checkOut = LocalDate.parse(tfCheckOut.getText(), formatter);
                LocalDate now = LocalDate.now();

                if (checkIn.isBefore(now)) {
                    JOptionPane.showMessageDialog(rootPane, "Thời gian check-in phải nằm trong tương lai");
                } else if (checkOut.isBefore(checkIn)) {
                    JOptionPane.showMessageDialog(rootPane, "Thời gian check-out phải sau thời gian check-in");
                } else {
                    // Xử lý cập nhật phòng
                    IHotelManager manager = (IHotelManager) Naming.lookup("rmi://localhost:1111/HotelManager");
                    System.out.println("Update lookup successfully");

                    int soPhong = Integer.parseInt((String) cbbSoPhong.getSelectedItem());
                    PhongThue phong = manager.getPhongBySoPhong(soPhong);

                    if (phong.getTrangThai().equalsIgnoreCase("Trống")) {
                        phong.setTrangThai("Có khách");
                        phong.setSoCMND(tfCMND.getText());
                        phong.setTenKhachHang(tfKhachHang.getText());
                        phong.setThoiGianCheckIn(checkIn);
                        phong.setThoiGianCheckOut(checkOut);
                        manager.updatePhong(phong);
                        manager.write();
                        JOptionPane.showMessageDialog(rootPane, "Cập nhật thông tin thành công");
                        addDanhSachPhongDaThue();
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Phòng đã có khách, xin vui lòng chọn phòng khác");
                    }
                }
            }
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(rootPane, "Định dạng thời gian không đúng. Vui lòng nhập định dạng yyyy-MM-dd.");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tfCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCheckInActionPerformed
        // TODO add your handling code here:
        tfCheckIn.setText("");
    }//GEN-LAST:event_tfCheckInActionPerformed

    private void tfCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCheckOutActionPerformed
        // TODO add your handling code here:
        tfCheckOut.setText("");
    }//GEN-LAST:event_tfCheckOutActionPerformed

    private void btnShowAllRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllRoomActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel model = (DefaultTableModel) tableDanhSach.getModel();
            model.setRowCount(0);
            IHotelManager manager = (IHotelManager) Naming.lookup("rmi://localhost:1111/HotelManager");
            System.out.println("btnShowAll lookup successfully");
            manager.read();
            // Lấy danh sách phòng
            List<PhongThue> danhSachPhong = manager.getAllPhongThue();
            for (PhongThue phong : danhSachPhong) {
                model.addRow(new Object[] {phong.getSoPhong(), phong.getTrangThai(), phong.getTenKhachHang(), phong.getSoCMND(), phong.getThoiGianCheckIn(), phong.getThoiGianCheckOut()});
            }
        } catch (MalformedURLException | NotBoundException | RemoteException e) {
            JOptionPane.showMessageDialog(rootPane, "Loi truy van du lieu len bang");
        }
    }//GEN-LAST:event_btnShowAllRoomActionPerformed

    private void btnShowEmptyRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowEmptyRoomActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel model = (DefaultTableModel) tableDanhSach.getModel();
            model.setRowCount(0);
            IHotelManager manager = (IHotelManager) Naming.lookup("rmi://localhost:1111/HotelManager");
            System.out.println("btnShowAllEmptyRoom lookup successfully");
            manager.read();
            // Lấy danh sách phòng
            List<PhongThue> danhSachPhong = manager.getAllPhongThue();
            for (PhongThue phong : danhSachPhong) {
                if(phong.getTrangThai().equalsIgnoreCase("Trống")){
                    model.addRow(new Object[] {phong.getSoPhong(), phong.getTrangThai(), phong.getTenKhachHang(), phong.getSoCMND(), phong.getThoiGianCheckIn(), phong.getThoiGianCheckOut()});
                }
            }
        } catch (MalformedURLException | NotBoundException | RemoteException e) {
            JOptionPane.showMessageDialog(rootPane, "Loi truy van du lieu len bang");
        }
    }//GEN-LAST:event_btnShowEmptyRoomActionPerformed

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        // TODO add your handling code here:
        try {
            int soPhong = Integer.parseInt((String) cbbSoPhongForCheckOut.getSelectedItem());
            IHotelManager manager = (IHotelManager) Naming.lookup("rmi://localhost:1111/HotelManager");
            System.out.println("CheckOut lookup successfully");

            PhongThue phong = manager.getPhongBySoPhong(soPhong);
            long tienThue = manager.tinhTienThue(phong);

            // Hiển thị confirm dialog với số tiền cần thanh toán
            int confirm = JOptionPane.showConfirmDialog(
                rootPane, 
                "Số tiền cần thanh toán: " + tienThue + " VND\n" + docTienBangChu(tienThue) + "\nBạn có muốn xác nhận thanh toán?",
                "Xác nhận thanh toán",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
            );

            if (confirm == JOptionPane.YES_OPTION) {
                // Người dùng xác nhận thanh toán
                manager.addLichSuThue(phong);
                phong.setTrangThai("Trống");
                phong.setSoCMND(null);
                phong.setTenKhachHang(null);
                phong.setThoiGianCheckIn(null);
                phong.setThoiGianCheckOut(null);
                manager.updatePhong(phong);
                manager.write();
                manager.writeHistory();
                JOptionPane.showMessageDialog(rootPane, "Cập nhật thông tin thành công");
                addDanhSachPhongDaThue();
            } else {
                // Người dùng bấm Cancel
                JOptionPane.showMessageDialog(rootPane, "Check-out đã bị huỷ.", "Huỷ bỏ", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            Logger.getLogger(Client_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCheckOutActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            int soPhong = Integer.parseInt(tfTimKiem.getText());
            IHotelManager manager = (IHotelManager) Naming.lookup("rmi://localhost:1111/HotelManager");
            System.out.println("Main lookup successfully");
            if(manager.getPhongBySoPhong(soPhong) == null){
                JOptionPane.showMessageDialog(rootPane, "Số phòng bạn nhập không có trong dữ liệu");
            }else{
                PhongThue phong = manager.getPhongBySoPhong(soPhong);
                DefaultTableModel model = (DefaultTableModel) tableDanhSach.getModel();
                model.setRowCount(0);
                model.addRow(new Object[] {phong.getSoPhong(), phong.getTrangThai(), phong.getTenKhachHang(), phong.getSoCMND(), phong.getThoiGianCheckIn(), phong.getThoiGianCheckOut()});
            }
        }catch(HeadlessException | NumberFormatException | MalformedURLException | NotBoundException | RemoteException e){
            JOptionPane.showMessageDialog(rootPane, "Bạn đã nhập sai định dạng số phòng");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnShowHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowHistoryActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel model = (DefaultTableModel) tableDanhSach.getModel();
            model.setRowCount(0);
            IHotelManager manager = (IHotelManager) Naming.lookup("rmi://localhost:1111/HotelManager");
            System.out.println("btnShowAll lookup successfully");
            manager.readHistory();
            // Lấy danh sách phòng
            List<PhongThue> lichSuThue = manager.getLichSuThue();
            for (PhongThue phong : lichSuThue) {
                model.addRow(new Object[] {phong.getSoPhong(), "Đã thanh toán", phong.getTenKhachHang(), phong.getSoCMND(), phong.getThoiGianCheckIn(), phong.getThoiGianCheckOut()});
            }
        } catch (MalformedURLException | NotBoundException | RemoteException e) {
            JOptionPane.showMessageDialog(rootPane, "Loi truy van du lieu len bang");
        }
    }//GEN-LAST:event_btnShowHistoryActionPerformed

    private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeActionPerformed
        // TODO add your handling code here:
        try{
            IHotelManager manager = (IHotelManager) Naming.lookup("rmi://localhost:1111/HotelManager");
            System.out.println("btnShowAll lookup successfully");
            int nam = Integer.parseInt((String) cbbYear.getSelectedItem());
            int thang = Integer.parseInt((String)cbbMonth.getSelectedItem());
            JOptionPane.showMessageDialog(rootPane, "Doanh thu thang " + thang + "/" + nam + ":\n" + manager.thongKe(nam, thang) + "VNĐ\n" + docTienBangChu(manager.thongKe(nam, thang)));
        }catch (HeadlessException | NumberFormatException | MalformedURLException | NotBoundException | RemoteException e){
            JOptionPane.showMessageDialog(rootPane, "Lỗi hệ thống");
        }
    }//GEN-LAST:event_btnThongKeActionPerformed

    private void cbbYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbYearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Client_GUI clientGui = new Client_GUI();
                clientGui.setVisible(true);
                try {
                    IHotelManager manager = (IHotelManager) Naming.lookup("rmi://localhost:1111/HotelManager");
                    System.out.println("Main lookup successfully");
                    manager.read();
                    manager.readHistory();
                    clientGui.addDanhSachPhong();
                    clientGui.addDanhSachPhongDaThue();
                } catch (MalformedURLException | NotBoundException | RemoteException e) {
                    System.out.println("Chưa kết nối Server, có thể Server chưa được khởi chạy.");
                }
            }
        });
    }
    public void addDanhSachPhong(){
        try {
            IHotelManager manager = (IHotelManager) Naming.lookup("rmi://localhost:1111/HotelManager");
            System.out.println("aDSP Lookup successfully");
            manager.read();
            // Lấy danh sách phòng
            List<PhongThue> danhSachPhong = manager.getAllPhongThue();
            cbbSoPhong.removeAllItems();
            for (PhongThue phong : danhSachPhong) {
                cbbSoPhong.addItem(String.valueOf(phong.getSoPhong()));
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    public void addDanhSachPhongDaThue(){
        try {
            IHotelManager manager = (IHotelManager) Naming.lookup("rmi://localhost:1111/HotelManager");
            System.out.println("aDSPDT Lookup successfully");
            manager.read();
            // Lấy danh sách phòng
            List<PhongThue> danhSachPhong = manager.getAllPhongThue();
            cbbSoPhongForCheckOut.removeAllItems();
            for (PhongThue phong : danhSachPhong) {
                if(!phong.getTrangThai().equalsIgnoreCase("Trống")){
                    cbbSoPhongForCheckOut.addItem(String.valueOf(phong.getSoPhong()));
                }
            }
        } catch (MalformedURLException | NotBoundException | RemoteException e) {
            System.out.println(e.getMessage());
        }
    }
    public boolean checkfill(){
            if(tfKhachHang.getText().equals(""))return false;
            if(tfCMND.getText().equals(""))return false;
            if(tfCheckOut.getText().equals(""))return false;
            if(tfCheckIn.getText().equals(""))return false;
            return true;
    }
    public static boolean checkFolmatHoVaTen(String name) {
    for (int i = 0; i < name.length(); i++) {
        char c = name.charAt(i);
        if (isSpecialCharacter(c)) {
            return false;
        }
    }
    return true;
    }

    public static boolean isSpecialCharacter(char c) {
        return !(Character.isLetter(c) || Character.isWhitespace(c));
    }
    
    public boolean checkFolmatCMND(String str){
        int a = 0;
        try {
            a = Integer.parseInt(str);
        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }
    
    public boolean checkFolmatTime(String time){
        try{
            LocalDate datetime = LocalDate.parse(time);
            return true;
        }catch(DateTimeParseException e){
            return false;
        }
    }
    public String docTienBangChu(long tien) {
    if (tien == 0) {
        return "không đồng";
    }

    StringBuilder result = new StringBuilder();

    if (tien / 1_000_000_000 > 0) {
        result.append(tien / 1_000_000_000).append(" tỷ ");
        tien = tien % 1_000_000_000;
    }
    if (tien / 1_000_000 > 0) {
        result.append(tien / 1_000_000).append(" triệu ");
        tien = tien % 1_000_000;
    }
    if (tien / 1_000 > 0) {
        result.append(tien / 1_000).append(" nghìn ");
        tien = tien % 1_000;
    }
    if (tien > 0) {
        result.append(tien).append(" đồng");
    } else {
        result.append("đồng");
    }

    return result.toString().trim().replaceAll("\\s+", " ");
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnShowAllRoom;
    private javax.swing.JButton btnShowEmptyRoom;
    private javax.swing.JButton btnShowHistory;
    private javax.swing.JButton btnThongKe;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbbMonth;
    private javax.swing.JComboBox<String> cbbSoPhong;
    private javax.swing.JComboBox<String> cbbSoPhongForCheckOut;
    private javax.swing.JComboBox<String> cbbYear;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTable tableDanhSach;
    private javax.swing.JTextField tfCMND;
    private javax.swing.JTextField tfCheckIn;
    private javax.swing.JTextField tfCheckOut;
    private javax.swing.JTextField tfKhachHang;
    private javax.swing.JTextField tfTimKiem;
    // End of variables declaration//GEN-END:variables
}